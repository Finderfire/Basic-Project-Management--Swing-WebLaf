/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistacontrol;

import accesodatos.clsMetodologiaDAO;
import accesodatos.clsProyectoEntregableDAO;
import accesodatos.clsProyectoUsuarioDAO;
import accesodatos.clsProyectoUsuarioEntregableDAO;
import conexion.clsConexionDS;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import transferenciadatos.clsProyectoEntregableDTO;
import transferenciadatos.clsProyectoUsuarioEntregableDTO;

/**
 *
 * @author Usuario
 */
public class frmConfigurarEntregable extends javax.swing.JPanel {
    
    DefaultMutableTreeNode dmtnMetodologia;
    DefaultMutableTreeNode dmtnEtapa;
    DefaultMutableTreeNode dmtnEntregable;  
    
    //entregables que se asignaron a un proyecto    
    ArrayList<String> arrayEntregableNombre = new ArrayList();
    ArrayList<String> arrayEntregableId = new ArrayList();
    ArrayList<String> arrayProyectoEntregableId = new ArrayList();
    
    //equipo de trabajo del proyecto
    ArrayList<String> arrayProyectoUsuarioId = new ArrayList();
    //equipo de trabajo del entregable
    ArrayList<String> arrayEntregableUsuarioId = new ArrayList();
    //engarcado del entregable
    ArrayList<String> arrayEntregableUsuarioEncargado = new ArrayList();
    
    DefaultListModel dlmProyectoEquipo = new DefaultListModel();
    DefaultListModel dlmEntregableEquipo = new DefaultListModel();
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    Connection conexion;
    
    //Metodolog√≠a que usa el proyecto
    //se obtiene el id para hacer una comparacion y obtener el entregable
    String metodologiaId;
    String proyectoEntregableId;
    
    private static final Font FUENTE_DROID = new Font("Droid Sans", Font.PLAIN, 14);
    
    
    /**
     * Creates new form frmConfiguracion
     */
    public frmConfigurarEntregable() {
       
        initComponents();
        
        srpPrincipal.getVerticalScrollBar().setUnitIncrement(16);
        txtFecha.setDateFormat(dateFormat);        
        conexion = clsConexionDS.AbrirConexion();
        ObtenerMetodologiaProyecto();
        ObtenerProyectoEntregable();
        CargarArbolMetodologia();
        clsConexionDS.CerrarConexion(conexion);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlTitulo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pnlPrincipalPadre = new javax.swing.JPanel();
        srpPrincipal = new javax.swing.JScrollPane();
        pnlPrincipal = new javax.swing.JPanel();
        pnlEntregable = new javax.swing.JPanel();
        pnlEntregableTitulo = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel14 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        pnlEntregableCuerpo = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        lstUsuarioEntregable = new javax.swing.JList<>();
        btnIzquierda = new javax.swing.JButton();
        btnDerecha = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        lstProyectoUsuario = new javax.swing.JList<>();
        jLabel19 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        btnGuardarConfiguracion = new javax.swing.JButton();
        txtFecha = new com.alee.extended.date.WebDateField();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cbxResponsableEntregable = new javax.swing.JCheckBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        treEntregable = new com.alee.laf.tree.WebTree();
        jLabel8 = new javax.swing.JLabel();
        txtEnlaceEntregable = new javax.swing.JTextField();
        btnAbrirGoogleDocs = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        pnlTitulo.setPreferredSize(new java.awt.Dimension(1125, 100));
        pnlTitulo.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(179, 229, 252));

        jLabel2.setFont(new java.awt.Font("Droid Sans", 1, 22)); // NOI18N
        jLabel2.setText("CONFIGURAR ENTREGABLE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(768, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(21, 21, 21))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 0, 15);
        pnlTitulo.add(jPanel1, gridBagConstraints);

        add(pnlTitulo, java.awt.BorderLayout.PAGE_START);

        pnlPrincipalPadre.setLayout(new java.awt.GridBagLayout());

        srpPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        srpPrincipal.setBorder(null);

        pnlPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        pnlPrincipal.setLayout(new java.awt.GridBagLayout());

        pnlEntregable.setBackground(new java.awt.Color(255, 255, 255));
        pnlEntregable.setLayout(new java.awt.BorderLayout());

        pnlEntregableTitulo.setBackground(new java.awt.Color(255, 255, 255));
        pnlEntregableTitulo.setPreferredSize(new java.awt.Dimension(970, 110));
        pnlEntregableTitulo.setLayout(new java.awt.BorderLayout());

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setLayout(new java.awt.BorderLayout());
        jPanel13.add(jSeparator4, java.awt.BorderLayout.CENTER);

        pnlEntregableTitulo.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Droid Sans", 1, 18)); // NOI18N
        jLabel14.setText("Entregables");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel14)
                .addContainerGap(1053, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(20, 20, 20))
        );

        pnlEntregableTitulo.add(jPanel14, java.awt.BorderLayout.PAGE_START);

        pnlEntregable.add(pnlEntregableTitulo, java.awt.BorderLayout.PAGE_START);

        pnlEntregableCuerpo.setBackground(new java.awt.Color(255, 255, 255));
        pnlEntregableCuerpo.setLayout(new java.awt.GridBagLayout());

        jLabel18.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jLabel18.setText("Equipo del proyecto.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(24, 0, 0, 0);
        pnlEntregableCuerpo.add(jLabel18, gridBagConstraints);

        lstUsuarioEntregable.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jScrollPane9.setViewportView(lstUsuarioEntregable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 0, 0);
        pnlEntregableCuerpo.add(jScrollPane9, gridBagConstraints);

        btnIzquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/x24/left.png"))); // NOI18N
        btnIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzquierdaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 5, 0);
        pnlEntregableCuerpo.add(btnIzquierda, gridBagConstraints);

        btnDerecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/x24/right.png"))); // NOI18N
        btnDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDerechaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 50, 0);
        pnlEntregableCuerpo.add(btnDerecha, gridBagConstraints);

        jScrollPane10.setPreferredSize(new java.awt.Dimension(200, 154));

        lstProyectoUsuario.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jScrollPane10.setViewportView(lstProyectoUsuario);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 24);
        pnlEntregableCuerpo.add(jScrollPane10, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jLabel19.setText("Participantes del entregable.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(24, 35, 0, 200);
        pnlEntregableCuerpo.add(jLabel19, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(35, 0, 0, 0);
        pnlEntregableCuerpo.add(jSeparator5, gridBagConstraints);

        btnGuardarConfiguracion.setFont(new java.awt.Font("Droid Sans", 1, 12)); // NOI18N
        btnGuardarConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/x24/settings.png"))); // NOI18N
        btnGuardarConfiguracion.setText("GUARDAR ENTREGABLE");
        btnGuardarConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarConfiguracionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(35, 24, 35, 100);
        pnlEntregableCuerpo.add(btnGuardarConfiguracion, gridBagConstraints);

        txtFecha.setText("Seleccione una fecha");
        txtFecha.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 24, 0, 24);
        pnlEntregableCuerpo.add(txtFecha, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jLabel17.setText("Fecha del entregable.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(24, 24, 10, 24);
        pnlEntregableCuerpo.add(jLabel17, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jLabel16.setText("Estructura del proyecto.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(24, 35, 10, 0);
        pnlEntregableCuerpo.add(jLabel16, gridBagConstraints);

        cbxResponsableEntregable.setBackground(new java.awt.Color(255, 255, 255));
        cbxResponsableEntregable.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        cbxResponsableEntregable.setText("Responsable de entregable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 24, 0, 100);
        pnlEntregableCuerpo.add(cbxResponsableEntregable, gridBagConstraints);

        treEntregable.setPreferredSize(new java.awt.Dimension(84, 86));
        treEntregable.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treEntregableValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(treEntregable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 0);
        pnlEntregableCuerpo.add(jScrollPane8, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jLabel8.setText("Enlace al entregable.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(24, 35, 10, 0);
        pnlEntregableCuerpo.add(jLabel8, gridBagConstraints);

        txtEnlaceEntregable.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        txtEnlaceEntregable.setForeground(new java.awt.Color(0, 0, 255));
        txtEnlaceEntregable.setDisabledTextColor(new java.awt.Color(0, 0, 255));
        txtEnlaceEntregable.setMinimumSize(new java.awt.Dimension(185, 28));
        txtEnlaceEntregable.setPreferredSize(new java.awt.Dimension(190, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 0);
        pnlEntregableCuerpo.add(txtEnlaceEntregable, gridBagConstraints);

        btnAbrirGoogleDocs.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        btnAbrirGoogleDocs.setText("Abrir Google Docs");
        btnAbrirGoogleDocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirGoogleDocsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 24, 0, 24);
        pnlEntregableCuerpo.add(btnAbrirGoogleDocs, gridBagConstraints);

        pnlEntregable.add(pnlEntregableCuerpo, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlPrincipal.add(pnlEntregable, gridBagConstraints);

        srpPrincipal.setViewportView(pnlPrincipal);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        pnlPrincipalPadre.add(srpPrincipal, gridBagConstraints);

        add(pnlPrincipalPadre, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzquierdaActionPerformed
       
        if(lstProyectoUsuario.getSelectedIndex() != -1)
        {
            int auxIndex = lstProyectoUsuario.getSelectedIndex();
            
            //agregar <-
            if(cbxResponsableEntregable.isSelected())
            {
                arrayEntregableUsuarioEncargado.add("1");
            }
            else
            {
                arrayEntregableUsuarioEncargado.add("0");
            }
            dlmEntregableEquipo.addElement(lstProyectoUsuario.getSelectedValue());
            arrayEntregableUsuarioId.add(arrayProyectoUsuarioId.get(auxIndex));
            lstUsuarioEntregable.setModel(dlmEntregableEquipo);
            
            //quitar
            arrayProyectoUsuarioId.remove(arrayProyectoUsuarioId.get(auxIndex));
            dlmProyectoEquipo.removeElement(lstProyectoUsuario.getSelectedValue());
            lstProyectoUsuario.setModel(dlmProyectoEquipo);
        }
        
    }//GEN-LAST:event_btnIzquierdaActionPerformed

    private void btnDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDerechaActionPerformed
        
        if(lstUsuarioEntregable.getSelectedIndex() != -1)
        {
            int auxIndex = lstUsuarioEntregable.getSelectedIndex();
            
            dlmProyectoEquipo.addElement(lstUsuarioEntregable.getSelectedValue());
            arrayProyectoUsuarioId.add(arrayEntregableUsuarioId.get(auxIndex));
            lstProyectoUsuario.setModel(dlmProyectoEquipo);
            
            arrayEntregableUsuarioId.remove(arrayEntregableUsuarioId.get(auxIndex));
            arrayEntregableUsuarioEncargado.remove(arrayEntregableUsuarioEncargado.get(auxIndex));
            dlmEntregableEquipo.removeElement(lstUsuarioEntregable.getSelectedValue());
            lstUsuarioEntregable.setModel(dlmEntregableEquipo);
            
        }
        
    }//GEN-LAST:event_btnDerechaActionPerformed

    private void btnGuardarConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarConfiguracionActionPerformed
        
        String fecha;
        String proyectoUsuarioId = "";
        JLabel lblMensaje;
        
        clsProyectoEntregableDAO proyectoEntregableDAO;
        clsProyectoEntregableDTO proyectoEntregableDTO;
        clsProyectoUsuarioEntregableDAO proyectoUsuarioEntregableDAO;
        clsProyectoUsuarioEntregableDTO proyectoUsuarioEntregableDTO;    
        clsProyectoUsuarioDAO proyectoUsuarioDAO;
        
        fecha = dateFormat.format(txtFecha.getDate());
        proyectoEntregableDAO = new clsProyectoEntregableDAO();
        proyectoUsuarioDAO = new clsProyectoUsuarioDAO();
        proyectoEntregableDTO = new clsProyectoEntregableDTO
                    (
                            proyectoEntregableId,
                            "",
                            "",
                            fecha,
                            txtEnlaceEntregable.getText()
                    );
        conexion = clsConexionDS.AbrirConexion();
        proyectoEntregableDAO.ActualizarProyectoEntregableFecha(proyectoEntregableDTO, conexion);
        
        proyectoUsuarioEntregableDAO = new clsProyectoUsuarioEntregableDAO();
        //arrayEntregableEquipoUsuarioId: id de los participantes del entregable
        for(String a : arrayEntregableUsuarioId)
        {
            System.out.println("ELIMINADO");
            System.out.println("............");
            System.out.println("Usuario: "+a + " Entregable: "+proyectoEntregableId);
            proyectoUsuarioEntregableDAO.EliminarProyectoUsuarioEntregable(proyectoEntregableId, conexion);            
        }
        
        //Agregar miembros al entregable
        for(int i = 0; i < arrayEntregableUsuarioId.size(); i++)
        {          
            try 
            {
                //consultar el proyectousuario_id a partir del usuario y proyecto
                proyectoUsuarioId = proyectoUsuarioDAO.SeleccionarProyectousuarioId (
                        arrayEntregableUsuarioId.get(i),
                        frmPrincipal.proyectoId,
                        conexion)
                        ;
            } 
            catch (Exception ex) 
            {
                Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, ex);
            }
            //se insertan los datos en proyectousuario_proyectoentregable
            proyectoUsuarioEntregableDTO = new clsProyectoUsuarioEntregableDTO
                            (                                    
                                    proyectoUsuarioId,
                                    proyectoEntregableId,
                                    arrayEntregableUsuarioEncargado.get(i),
                                    ""
                            );
            
            proyectoUsuarioEntregableDAO.CrearProyectoUsuarioEntregable(proyectoUsuarioEntregableDTO, conexion);            
        }
        
        lblMensaje = new JLabel("Se configuro el entregable correctamente");
            lblMensaje.setFont(FUENTE_DROID);
            JOptionPane.showMessageDialog(this, lblMensaje, 
                    "Configuraci√≥n correcta", JOptionPane.INFORMATION_MESSAGE);  
        
    }//GEN-LAST:event_btnGuardarConfiguracionActionPerformed

    private void treEntregableValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treEntregableValueChanged

        Object nodoSeleccionado;        
        DefaultMutableTreeNode node;
        node = (DefaultMutableTreeNode) treEntregable.getLastSelectedPathComponent();
        
        if(node != null)
        {
            nodoSeleccionado = node.getUserObject();
            String[] auxPartes = nodoSeleccionado.toString().split("-");
            proyectoEntregableId = auxPartes[0];
            conexion = clsConexionDS.AbrirConexion();
            CargarListaEntregableUsuario();
            CargarListaProyectoUsuario();
            CargarEntregableFecha();            
            clsConexionDS.CerrarConexion(conexion);            
        }        
        
    }//GEN-LAST:event_treEntregableValueChanged

    private void btnAbrirGoogleDocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirGoogleDocsActionPerformed
        
        AbrirEnlaceGoogleDocs();
        
    }//GEN-LAST:event_btnAbrirGoogleDocsActionPerformed

    /**
     * Abre el enlace a Google Docs
     */
    private void AbrirEnlaceGoogleDocs() {
        
        try 
        {
            URL urlGoogle = new URL("https://docs.google.com/?hl=es");
            Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
            if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) 
            {
                try 
                {
                    desktop.browse(urlGoogle.toURI());
                }
                catch (IOException | URISyntaxException e) 
                {
                    Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, e);
                }
            }            
        }
        catch (MalformedURLException ex) 
        {
            Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**
     * Carga el treEntregable a trav√©s de consultas anidadas.
     * Se obtiene primero la metodolog√≠a, las etapas y finalmente
     * los entregables
     */
    private void CargarArbolMetodologia() {
        
        clsMetodologiaDAO metodologiaDAO = new clsMetodologiaDAO();
        
        Object[][] datosEtapa;
        Object[][] datosEntregable;              
        
        conexion = clsConexionDS.AbrirConexion();        
        datosEtapa =  metodologiaDAO.SeleccionarEtapaEntregableMetodologia (
                    "etapa", 
                    " etapa_id, etapa_nombre", 
                    " metodologia_id='" + metodologiaId + "' ", 
                    conexion
                    );
        
        if( datosEtapa.length > 0)
        {
            for (int i=0; i < datosEtapa.length; i++) 
            {
                //se crea nodo Etapa
                dmtnEtapa = new DefaultMutableTreeNode(datosEtapa[i][1]);
                dmtnMetodologia.add(dmtnEtapa);
                //se obtiene los Entregable
                datosEntregable = metodologiaDAO.SeleccionarEntregableEtapaMetodologia (
                                "proyectoentregable as pe", 
                                "pe.proyectoentregable_id,pe.entregable_id,e.entregable_nombre", 
                                "e.etapa_id='" + datosEtapa[i][0].toString() + "' and "
                                + "pe.proyecto_id='"+ frmPrincipal.proyectoId+ "'", 
                                conexion
                                );
                
                if( datosEntregable.length > 0)
                {
                    for (int j=0; j< datosEntregable.length; j++) 
                    {
                        //intento de colocar en blanco
                        JLabel l = new JLabel((String) datosEntregable[j][0]);     
                        l.setForeground(Color.white);
                        //fin del intento
                        //Filtra los entregables que solo se selecciono
                        for(String ei : arrayProyectoEntregableId)
                        {
                            if(datosEntregable[j][0].equals(ei))
                            {
                            dmtnEntregable = new DefaultMutableTreeNode(l.getText() +
                                " - " + (String) datosEntregable[j][2] );
                            dmtnEtapa.add(dmtnEntregable);
                            }
                        }                        
                    }
                }
            }
        }
        
        DefaultTreeModel modelo = new DefaultTreeModel(dmtnMetodologia);
        treEntregable.setModel(modelo);
        
    }
    
    /**
     * Obtiene la metodologia que usa el proyecto.
     * Almacena metodologiaId.
     * Decalara el nodo principal del arbol.
     */
    private void ObtenerMetodologiaProyecto() {
        
        
        ResultSet rsResultado;
        clsMetodologiaDAO metodologiaDAO = new clsMetodologiaDAO();
        
        conexion = clsConexionDS.AbrirConexion();     
        try 
        {                        
            rsResultado = metodologiaDAO.SeleccionarMetodologiaProyecto(frmPrincipal.proyectoId, conexion);
            while(rsResultado.next())
            {
                metodologiaId = rsResultado.getString("metodologia_id");
                dmtnMetodologia = new DefaultMutableTreeNode(rsResultado.getString("metodologia_nombre"));
            }                   
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
    }
    
    /**
     * Obtiene los Entregables del proyecto para su posterior comparacion.
     * almacena los datos en los respectivos arrayList.
     */
    private void ObtenerProyectoEntregable() {
        
        ResultSet rsResultado;        
        clsProyectoEntregableDAO proyectoEntregableDAO = new clsProyectoEntregableDAO();
        
        arrayEntregableId.clear();
        arrayEntregableNombre.clear();
        conexion = clsConexionDS.AbrirConexion();
        try
        {
            rsResultado = proyectoEntregableDAO.SeleccionarProyectoEntregable(frmPrincipal.proyectoId, conexion);
            while(rsResultado.next())
            {
                arrayProyectoEntregableId.add(rsResultado.getString("proyectoentregable_id"));
                arrayEntregableId.add(rsResultado.getString("entregable_id"));
                arrayEntregableNombre.add(rsResultado.getString("entregable_nombre"));
            }                    
        }
        catch (Exception ex) 
        {
            Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }
    
    private void CargarListaProyectoUsuario() {
        
        clsProyectoUsuarioDAO proyectoUsuarioDAO = new clsProyectoUsuarioDAO();
        ResultSet rsResultado;
        
        dlmProyectoEquipo.removeAllElements();
        arrayProyectoUsuarioId.clear();        
        try 
        {
            rsResultado = proyectoUsuarioDAO.SeleccionarProyectoEquipo(frmPrincipal.proyectoId, conexion);
            //arrayEntregableEquipoUsuarioId
            while(rsResultado.next())
            {
                if (!arrayEntregableUsuarioId.contains(rsResultado.getString("usuario_id")))
                {
                    arrayProyectoUsuarioId.add(rsResultado.getString("usuario_id"));
                    dlmProyectoEquipo.addElement (
                                rsResultado.getString("usuario_apellido")+", "+
                                rsResultado.getString("usuario_nombre")
                            );
                }                
            }
            lstProyectoUsuario.setModel(dlmProyectoEquipo);
        }
        catch (Exception ex) 
        {
            Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void CargarListaEntregableUsuario() {
    
        ResultSet rsResultado;        
        clsProyectoUsuarioEntregableDAO proyectoUsuarioEntregableDAO = new clsProyectoUsuarioEntregableDAO();
        dlmEntregableEquipo.removeAllElements();
        arrayEntregableUsuarioId.clear();
        arrayEntregableUsuarioEncargado.clear();
        try 
        {
            rsResultado = proyectoUsuarioEntregableDAO.SeleccionarProyectoUsuarioEntregable
                            (proyectoEntregableId, conexion);
            while(rsResultado.next())
            {
                dlmEntregableEquipo.addElement
                            (
                                rsResultado.getString("usuario_apellido")+", "+
                                rsResultado.getString("usuario_nombre")
                            );
                
                arrayEntregableUsuarioId.add(rsResultado.getString("usuario_id"));
                arrayEntregableUsuarioEncargado.add(rsResultado.getString("proyectousuario_proyectoentregable_responsable"));
            }
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        lstUsuarioEntregable.setModel(dlmEntregableEquipo);
        
    }
            
    private void CargarEntregableFecha() {
        
        clsProyectoEntregableDAO proyectoEntregableDAO;
        Date fecha = null;
        ResultSet rsResultado;
        proyectoEntregableDAO = new clsProyectoEntregableDAO();
        try 
        {
            if(proyectoEntregableDAO.SeleccionarProyectoEntregableFecha
                                (
                                    proyectoEntregableId, 
                                    conexion
                                ) != null)
            {
                rsResultado = proyectoEntregableDAO.SeleccionarProyectoEntregableFecha
                                ( 
                                    proyectoEntregableId, 
                                    conexion
                                );
                while(rsResultado.next())
                {
                    fecha = dateFormat.parse(rsResultado.getString("proyectoentregable_fecha"));
                    txtEnlaceEntregable.setText(rsResultado.getString("proyectoentregable_enlace"));
                }
                
                txtFecha.setDate(fecha);
                
            }            
        }
        catch (Exception ex) 
        {
            Logger.getLogger(frmConfigurarEntregable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }        
    
       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirGoogleDocs;
    private javax.swing.JButton btnDerecha;
    private javax.swing.JButton btnGuardarConfiguracion;
    private javax.swing.JButton btnIzquierda;
    private javax.swing.JCheckBox cbxResponsableEntregable;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JList<String> lstProyectoUsuario;
    private javax.swing.JList<String> lstUsuarioEntregable;
    private javax.swing.JPanel pnlEntregable;
    private javax.swing.JPanel pnlEntregableCuerpo;
    private javax.swing.JPanel pnlEntregableTitulo;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JPanel pnlPrincipalPadre;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JScrollPane srpPrincipal;
    private com.alee.laf.tree.WebTree treEntregable;
    private javax.swing.JTextField txtEnlaceEntregable;
    private com.alee.extended.date.WebDateField txtFecha;
    // End of variables declaration//GEN-END:variables

    
}
